{"version":3,"file":"reactlang.js.umd.js","sources":["../../node_modules/lang.js/src/lang.js","../../src/TranslationHelper.js","../../src/Translatable.js","../../src/index.js"],"sourcesContent":["/*!\n *  Lang.js for Laravel localization in JavaScript.\n *\n *  @version 1.1.12\n *  @license MIT https://github.com/rmariuzzo/Lang.js/blob/master/LICENSE\n *  @site    https://github.com/rmariuzzo/Lang.js\n *  @author  Rubens Mariuzzo <rubens@mariuzzo.com>\n */\n\n(function(root, factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD support.\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // NodeJS support.\n        module.exports = factory();\n    } else {\n        // Browser global support.\n        root.Lang = factory();\n    }\n\n}(this, function() {\n    'use strict';\n\n    function inferLocale() {\n        if (typeof document !== 'undefined' && document.documentElement) {\n            return document.documentElement.lang;\n        }\n    };\n\n    function convertNumber(str) {\n        if (str === '-Inf') {\n            return -Infinity;\n        } else if (str === '+Inf' || str === 'Inf' || str === '*') {\n            return Infinity;\n        }\n        return parseInt(str, 10);\n    }\n\n    // Derived from: https://github.com/symfony/translation/blob/460390765eb7bb9338a4a323b8a4e815a47541ba/Interval.php\n    var intervalRegexp = /^({\\s*(\\-?\\d+(\\.\\d+)?[\\s*,\\s*\\-?\\d+(\\.\\d+)?]*)\\s*})|([\\[\\]])\\s*(-Inf|\\*|\\-?\\d+(\\.\\d+)?)\\s*,\\s*(\\+?Inf|\\*|\\-?\\d+(\\.\\d+)?)\\s*([\\[\\]])$/;\n    var anyIntervalRegexp = /({\\s*(\\-?\\d+(\\.\\d+)?[\\s*,\\s*\\-?\\d+(\\.\\d+)?]*)\\s*})|([\\[\\]])\\s*(-Inf|\\*|\\-?\\d+(\\.\\d+)?)\\s*,\\s*(\\+?Inf|\\*|\\-?\\d+(\\.\\d+)?)\\s*([\\[\\]])/;\n\n    // Default options //\n\n    var defaults = {\n        locale: 'en'/** The default locale if not set. */\n    };\n\n    // Constructor //\n\n    var Lang = function(options) {\n        options = options || {};\n        this.locale = options.locale || inferLocale() || defaults.locale;\n        this.fallback = options.fallback;\n        this.messages = options.messages;\n    };\n\n    // Methods //\n\n    /**\n     * Set messages source.\n     *\n     * @param messages {object} The messages source.\n     *\n     * @return void\n     */\n    Lang.prototype.setMessages = function(messages) {\n        this.messages = messages;\n    };\n\n    /**\n     * Get the current locale.\n     *\n     * @return {string} The current locale.\n     */\n    Lang.prototype.getLocale = function() {\n        return this.locale || this.fallback;\n    };\n\n    /**\n     * Set the current locale.\n     *\n     * @param locale {string} The locale to set.\n     *\n     * @return void\n     */\n    Lang.prototype.setLocale = function(locale) {\n        this.locale = locale;\n    };\n\n    /**\n     * Get the fallback locale being used.\n     *\n     * @return void\n     */\n    Lang.prototype.getFallback = function() {\n        return this.fallback;\n    };\n\n    /**\n     * Set the fallback locale being used.\n     *\n     * @param fallback {string} The fallback locale.\n     *\n     * @return void\n     */\n    Lang.prototype.setFallback = function(fallback) {\n        this.fallback = fallback;\n    };\n\n    /**\n     * This method act as an alias to get() method.\n     *\n     * @param key {string} The key of the message.\n     * @param locale {string} The locale of the message\n     *\n     * @return {boolean} true if the given key is defined on the messages source, otherwise false.\n     */\n    Lang.prototype.has = function(key, locale) {\n        if (typeof key !== 'string' || !this.messages) {\n            return false;\n        }\n\n        return this._getMessage(key, locale) !== null;\n    };\n\n    /**\n     * Get a translation message.\n     *\n     * @param key {string} The key of the message.\n     * @param replacements {object} The replacements to be done in the message.\n     * @param locale {string} The locale to use, if not passed use the default locale.\n     *\n     * @return {string} The translation message, if not found the given key.\n     */\n    Lang.prototype.get = function(key, replacements, locale) {\n        if (!this.has(key, locale)) {\n            return key;\n        }\n\n        var message = this._getMessage(key, locale);\n        if (message === null) {\n            return key;\n        }\n\n        if (replacements) {\n            message = this._applyReplacements(message, replacements);\n        }\n\n        return message;\n    };\n\n    /**\n     * This method act as an alias to get() method.\n     *\n     * @param key {string} The key of the message.\n     * @param replacements {object} The replacements to be done in the message.\n     *\n     * @return {string} The translation message, if not found the given key.\n     */\n    Lang.prototype.trans = function(key, replacements) {\n        return this.get(key, replacements);\n    };\n\n    /**\n     * Gets the plural or singular form of the message specified based on an integer value.\n     *\n     * @param key {string} The key of the message.\n     * @param count {number} The number of elements.\n     * @param replacements {object} The replacements to be done in the message.\n     * @param locale {string} The locale to use, if not passed use the default locale.\n     *\n     * @return {string} The translation message according to an integer value.\n     */\n    Lang.prototype.choice = function(key, number, replacements, locale) {\n        // Set default values for parameters replace and locale\n        replacements = typeof replacements !== 'undefined'\n            ? replacements\n            : {};\n\n        // The count must be replaced if found in the message\n        replacements.count = number;\n\n        // Message to get the plural or singular\n        var message = this.get(key, replacements, locale);\n\n        // Check if message is not null or undefined\n        if (message === null || message === undefined) {\n            return message;\n        }\n\n        // Separate the plural from the singular, if any\n        var messageParts = message.split('|');\n\n        // Get the explicit rules, If any\n        var explicitRules = [];\n\n        for (var i = 0; i < messageParts.length; i++) {\n            messageParts[i] = messageParts[i].trim();\n\n            if (anyIntervalRegexp.test(messageParts[i])) {\n                var messageSpaceSplit = messageParts[i].split(/\\s/);\n                explicitRules.push(messageSpaceSplit.shift());\n                messageParts[i] = messageSpaceSplit.join(' ');\n            }\n        }\n\n        // Check if there's only one message\n        if (messageParts.length === 1) {\n            // Nothing to do here\n            return message;\n        }\n\n        // Check the explicit rules\n        for (var j = 0; j < explicitRules.length; j++) {\n            if (this._testInterval(number, explicitRules[j])) {\n                return messageParts[j];\n            }\n        }\n\n        locale = locale || this._getLocale(key);\n        var pluralForm = this._getPluralForm(number, locale);\n\n        return messageParts[pluralForm];\n    };\n\n    /**\n     * This method act as an alias to choice() method.\n     *\n     * @param key {string} The key of the message.\n     * @param count {number} The number of elements.\n     * @param replacements {object} The replacements to be done in the message.\n     *\n     * @return {string} The translation message according to an integer value.\n     */\n    Lang.prototype.transChoice = function(key, count, replacements) {\n        return this.choice(key, count, replacements);\n    };\n\n    /**\n     * Parse a message key into components.\n     *\n     * @param key {string} The message key to parse.\n     * @param key {string} The message locale to parse\n     * @return {object} A key object with source and entries properties.\n     */\n    Lang.prototype._parseKey = function(key, locale) {\n        if (typeof key !== 'string' || typeof locale !== 'string') {\n            return null;\n        }\n\n        var segments = key.split('.');\n        var source = segments[0].replace(/\\//g, '.');\n\n        return {\n            source: locale + '.' + source,\n            sourceFallback: this.getFallback() + '.' + source,\n            entries: segments.slice(1)\n        };\n    };\n\n    /**\n     * Returns a translation message. Use `Lang.get()` method instead, this methods assumes the key exists.\n     *\n     * @param key {string} The key of the message.\n     * @param locale {string} The locale of the message\n     *\n     * @return {string} The translation message for the given key.\n     */\n    Lang.prototype._getMessage = function(key, locale) {\n        locale = locale || this.getLocale();\n        key = this._parseKey(key, locale);\n\n        // Ensure message source exists.\n        if (this.messages[key.source] === undefined && this.messages[key.sourceFallback] === undefined) {\n            return null;\n        }\n\n        // Get message from default locale.\n        var message = this.messages[key.source];\n        var entries = key.entries.slice();\n        var subKey = '';\n        while (entries.length && message !== undefined) {\n            var subKey = !subKey ? entries.shift() : subKey.concat('.', entries.shift());\n            if (message[subKey] !== undefined) {\n                message = message[subKey]\n                subKey = '';\n            }\n        }\n\n        // Get message from fallback locale.\n        if (typeof message !== 'string' && this.messages[key.sourceFallback]) {\n            message = this.messages[key.sourceFallback];\n            entries = key.entries.slice();\n            subKey = '';\n            while (entries.length && message !== undefined) {\n                var subKey = !subKey ? entries.shift() : subKey.concat('.', entries.shift());\n                if (message[subKey]) {\n                    message = message[subKey]\n                    subKey = '';\n                }\n            }\n        }\n\n        if (typeof message !== 'string') {\n            return null;\n        }\n\n        return message;\n    };\n\n    /**\n     * Return the locale to be used between default and fallback.\n     * @param {String} key\n     * @return {String}\n     */\n    Lang.prototype._getLocale = function(key) {\n        key = this._parseKey(key, this.locale)\n        if (this.messages[key.source]) {\n            return this.locale;\n        }\n        if (this.messages[key.sourceFallback]) {\n            return this.fallback;\n        }\n        return null;\n    };\n\n    /**\n     * Find a message in a translation tree using both dotted keys and regular ones\n     *\n     * @param pathSegments {array} An array of path segments such as ['family', 'father']\n     * @param tree {object} The translation tree\n     */\n    Lang.prototype._findMessageInTree = function(pathSegments, tree) {\n        while (pathSegments.length && tree !== undefined) {\n            var dottedKey = pathSegments.join('.');\n            if (tree[dottedKey]) {\n                tree = tree[dottedKey];\n                break;\n            }\n\n            tree = tree[pathSegments.shift()]\n        }\n\n        return tree;\n    };\n\n    /**\n     * Sort replacement keys by length in descending order.\n     *\n     * @param a {string} Replacement key\n     * @param b {string} Sibling replacement key\n     * @return {number}\n     * @private\n     */\n    Lang.prototype._sortReplacementKeys = function(a, b) {\n        return b.length - a.length;\n    };\n\n    /**\n     * Apply replacements to a string message containing placeholders.\n     *\n     * @param message {string} The text message.\n     * @param replacements {object} The replacements to be done in the message.\n     *\n     * @return {string} The string message with replacements applied.\n     */\n    Lang.prototype._applyReplacements = function(message, replacements) {\n        var keys = Object.keys(replacements).sort(this._sortReplacementKeys);\n\n        keys.forEach(function(replace) {\n            message = message.replace(new RegExp(':' + replace, 'gi'), function (match) {\n                var value = replacements[replace];\n\n                // Capitalize all characters.\n                var allCaps = match === match.toUpperCase();\n                if (allCaps) {\n                    return value.toUpperCase();\n                }\n\n                // Capitalize first letter.\n                var firstCap = match === match.replace(/\\w/i, function(letter) {\n                    return letter.toUpperCase();\n                });\n                if (firstCap) {\n                    return value.charAt(0).toUpperCase() + value.slice(1);\n                }\n\n                return value;\n            })\n        });\n        return message;\n    };\n\n    /**\n     * Checks if the given `count` is within the interval defined by the {string} `interval`\n     *\n     * @param  count     {int}    The amount of items.\n     * @param  interval  {string} The interval to be compared with the count.\n     * @return {boolean}          Returns true if count is within interval; false otherwise.\n     */\n    Lang.prototype._testInterval = function(count, interval) {\n        /**\n         * From the Symfony\\Component\\Translation\\Interval Docs\n         *\n         * Tests if a given number belongs to a given math interval.\n         *\n         * An interval can represent a finite set of numbers:\n         *\n         *  {1,2,3,4}\n         *\n         * An interval can represent numbers between two numbers:\n         *\n         *  [1, +Inf]\n         *  ]-1,2[\n         *\n         * The left delimiter can be [ (inclusive) or ] (exclusive).\n         * The right delimiter can be [ (exclusive) or ] (inclusive).\n         * Beside numbers, you can use -Inf and +Inf for the infinite.\n         */\n\n        if (typeof interval !== 'string') {\n            throw 'Invalid interval: should be a string.';\n        }\n\n        interval = interval.trim();\n\n        var matches = interval.match(intervalRegexp);\n        if (!matches) {\n            throw 'Invalid interval: ' + interval;\n        }\n\n        if (matches[2]) {\n            var items = matches[2].split(',');\n            for (var i = 0; i < items.length; i++) {\n                if (parseInt(items[i], 10) === count) {\n                    return true;\n                }\n            }\n        } else {\n            // Remove falsy values.\n            matches = matches.filter(function(match) {\n                return !!match;\n            });\n\n            var leftDelimiter = matches[1];\n            var leftNumber = convertNumber(matches[2]);\n            if (leftNumber === Infinity) {\n                leftNumber = -Infinity;\n            }\n            var rightNumber = convertNumber(matches[3]);\n            var rightDelimiter = matches[4];\n\n            return (leftDelimiter === '[' ? count >= leftNumber : count > leftNumber)\n                && (rightDelimiter === ']' ? count <= rightNumber : count < rightNumber);\n        }\n\n        return false;\n    };\n\n    /**\n     * Returns the plural position to use for the given locale and number.\n     *\n     * The plural rules are derived from code of the Zend Framework (2010-09-25),\n     * which is subject to the new BSD license (http://framework.zend.com/license/new-bsd).\n     * Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)\n     *\n     * @param {Number} count\n     * @param {String} locale\n     * @return {Number}\n     */\n    Lang.prototype._getPluralForm = function(count, locale) {\n        switch (locale) {\n            case 'az':\n            case 'bo':\n            case 'dz':\n            case 'id':\n            case 'ja':\n            case 'jv':\n            case 'ka':\n            case 'km':\n            case 'kn':\n            case 'ko':\n            case 'ms':\n            case 'th':\n            case 'tr':\n            case 'vi':\n            case 'zh':\n                return 0;\n\n            case 'af':\n            case 'bn':\n            case 'bg':\n            case 'ca':\n            case 'da':\n            case 'de':\n            case 'el':\n            case 'en':\n            case 'eo':\n            case 'es':\n            case 'et':\n            case 'eu':\n            case 'fa':\n            case 'fi':\n            case 'fo':\n            case 'fur':\n            case 'fy':\n            case 'gl':\n            case 'gu':\n            case 'ha':\n            case 'he':\n            case 'hu':\n            case 'is':\n            case 'it':\n            case 'ku':\n            case 'lb':\n            case 'ml':\n            case 'mn':\n            case 'mr':\n            case 'nah':\n            case 'nb':\n            case 'ne':\n            case 'nl':\n            case 'nn':\n            case 'no':\n            case 'om':\n            case 'or':\n            case 'pa':\n            case 'pap':\n            case 'ps':\n            case 'pt':\n            case 'so':\n            case 'sq':\n            case 'sv':\n            case 'sw':\n            case 'ta':\n            case 'te':\n            case 'tk':\n            case 'ur':\n            case 'zu':\n                return (count == 1)\n                    ? 0\n                    : 1;\n\n            case 'am':\n            case 'bh':\n            case 'fil':\n            case 'fr':\n            case 'gun':\n            case 'hi':\n            case 'hy':\n            case 'ln':\n            case 'mg':\n            case 'nso':\n            case 'xbr':\n            case 'ti':\n            case 'wa':\n                return ((count === 0) || (count === 1))\n                    ? 0\n                    : 1;\n\n            case 'be':\n            case 'bs':\n            case 'hr':\n            case 'ru':\n            case 'sr':\n            case 'uk':\n                return ((count % 10 == 1) && (count % 100 != 11))\n                    ? 0\n                    : (((count % 10 >= 2) && (count % 10 <= 4) && ((count % 100 < 10) || (count % 100 >= 20)))\n                        ? 1\n                        : 2);\n\n            case 'cs':\n            case 'sk':\n                return (count == 1)\n                    ? 0\n                    : (((count >= 2) && (count <= 4))\n                        ? 1\n                        : 2);\n\n            case 'ga':\n                return (count == 1)\n                    ? 0\n                    : ((count == 2)\n                        ? 1\n                        : 2);\n\n            case 'lt':\n                return ((count % 10 == 1) && (count % 100 != 11))\n                    ? 0\n                    : (((count % 10 >= 2) && ((count % 100 < 10) || (count % 100 >= 20)))\n                        ? 1\n                        : 2);\n\n            case 'sl':\n                return (count % 100 == 1)\n                    ? 0\n                    : ((count % 100 == 2)\n                        ? 1\n                        : (((count % 100 == 3) || (count % 100 == 4))\n                            ? 2\n                            : 3));\n\n            case 'mk':\n                return (count % 10 == 1)\n                    ? 0\n                    : 1;\n\n            case 'mt':\n                return (count == 1)\n                    ? 0\n                    : (((count === 0) || ((count % 100 > 1) && (count % 100 < 11)))\n                        ? 1\n                        : (((count % 100 > 10) && (count % 100 < 20))\n                            ? 2\n                            : 3));\n\n            case 'lv':\n                return (count === 0)\n                    ? 0\n                    : (((count % 10 == 1) && (count % 100 != 11))\n                        ? 1\n                        : 2);\n\n            case 'pl':\n                return (count == 1)\n                    ? 0\n                    : (((count % 10 >= 2) && (count % 10 <= 4) && ((count % 100 < 12) || (count % 100 > 14)))\n                        ? 1\n                        : 2);\n\n            case 'cy':\n                return (count == 1)\n                    ? 0\n                    : ((count == 2)\n                        ? 1\n                        : (((count == 8) || (count == 11))\n                            ? 2\n                            : 3));\n\n            case 'ro':\n                return (count == 1)\n                    ? 0\n                    : (((count === 0) || ((count % 100 > 0) && (count % 100 < 20)))\n                        ? 1\n                        : 2);\n\n            case 'ar':\n                return (count === 0)\n                    ? 0\n                    : ((count == 1)\n                        ? 1\n                        : ((count == 2)\n                            ? 2\n                            : (((count % 100 >= 3) && (count % 100 <= 10))\n                                ? 3\n                                : (((count % 100 >= 11) && (count % 100 <= 99))\n                                    ? 4\n                                    : 5))));\n\n            default:\n                return 0;\n        }\n    };\n\n    return Lang;\n\n}));\n","\nimport Lang from 'lang.js';\n\nexport default class TranslationHelper extends Lang {\n    constructor(options) {\n        super(options);\n        this.messages = options.messages;\n    }\n\n    // Overwrite _parseKey of lang.js import to remove the need\n    // to include locale prefix in translation keys\n    _parseKey(key) {\n        if (typeof key !== 'string') {\n            return null;\n        }\n\n        const segments = key.split('.');\n        const source = segments[0].replace(/\\//g, '.');\n\n        return {\n            source,\n            sourceFallback: source,\n            entries: segments.slice(1)\n        };\n    }\n}\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TranslationHelper from './TranslationHelper';\n\nclass Translatable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.langHelper = new TranslationHelper({\n            messages: props.lang\n        });\n        this.applyPropsAndContentToChildren = this.applyPropsAndContentToChildren.bind(this);\n        this.handleAttributes = this.handleAttributes.bind(this);\n        this.handleNestedAttributes = this.handleNestedAttributes.bind(this);\n        this.mungeString = this.mungeString.bind(this);\n        this.removeUnwantedProps = this.removeUnwantedProps.bind(this);\n    }\n\n    applyPropsAndContentToChildren(props, content = null) {\n        return React.Children.map(this.props.children, child => {\n            const propsToApply = {\n                ...child.props,\n                ...props\n            };\n            for (const key in child.props) {\n                if (props[key]) {\n                    if (props[key] instanceof Object) {\n                        propsToApply[key] = {\n                            ...child.props[key],\n                            ...props[key]\n                        };\n                    } else if (typeof props[key] === 'string') {\n                        propsToApply[key] = `${child.props[key]} ${props[key]}`;\n                    }\n                }\n            }\n            if (props.nestedAttributes) {\n                for (const key in child.props) {\n                    if (props.nestedAttributes[key]) {\n                        const prop = child.props[key];\n                        if (prop && prop instanceof Object && propsToApply[key]) {\n                            propsToApply[key] = {\n                                ...prop,\n                                ...props[key]\n                            };\n                        }\n                    }\n                }\n            }\n            let updatedChild = React.cloneElement(child, propsToApply, content);\n            if (child.props.children) {\n                updatedChild = React.cloneElement(child, propsToApply, child.props.children);\n            }\n            return updatedChild;\n        });\n    }\n\n    handleAttributes(props) {\n        const newProps = { ...props };\n        for (const key in newProps.attributes) {\n            const attribute = newProps.attributes[key];\n            if (attribute) {\n                const transString = this.mungeString(attribute);\n                newProps[key] = transString;\n            }\n        }\n        return newProps;\n    }\n\n    handleNestedAttributes(props) {\n        const newProps = { ...props };\n        for (const key in newProps.nestedAttributes) {\n            const nestedAttribute = newProps.nestedAttributes[key];\n            if (nestedAttribute) {\n                for (const k in nestedAttribute) {\n                    const attribute = nestedAttribute[k];\n                    if (attribute) {\n                        const transString = this.mungeString(attribute);\n                        newProps[key] = {};\n                        newProps[key][k] = transString;\n                    }\n                }\n            }\n        }\n        return newProps;\n    }\n\n    mungeString({ transKey, count, replacements }) {\n        if (typeof count !== 'undefined' && typeof replacements !== 'undefined') {\n            return this.langHelper.choice(transKey, count, replacements);\n        } else if (typeof count === 'undefined' && typeof replacements !== 'undefined') {\n            if (this.props.handleError) {\n                this.props.handleError({\n                    message: 'Replacements were given without the required count property',\n                    name: 'No count supplied'\n                });\n            } else {\n                throw new Error('Replacements were given without the required count property');\n            }\n        }\n        return this.langHelper.get(transKey);\n    }\n\n    removeUnwantedProps() {\n        const props = { ...this.props };\n        delete props.store;\n        delete props.storeSubscription;\n        delete props.dispatch;\n        delete props.lang;\n        return props;\n    }\n\n    render() {\n        if (this.props.children && React.Children.count(this.props.children) > 1) {\n            if (this.props.handleError) {\n                this.props.handleError({\n                    message: 'The Translatable component only allows a single child',\n                    name: 'Too many children'\n                });\n            } else {\n                throw new Error('The Translatable component only allows a single child');\n            }\n        }\n        let props = this.removeUnwantedProps();\n        const content = props.content;\n        delete props.content;\n        delete props.handleError;\n        if (props.className) {\n            props.className = `translatable ${props.className}`;\n        } else {\n            props.className = 'translatable';\n        }\n        if (props.attributes) {\n            props = this.handleAttributes(props);\n            delete props.attributes;\n        }\n        if (props.nestedAttributes) {\n            props = this.handleNestedAttributes(props);\n        }\n        if (this.props.children) {\n            delete props.children;\n            let children;\n            if (content) {\n                const translatedString = this.mungeString(content);\n                children = this.applyPropsAndContentToChildren(props, translatedString);\n            } else {\n                children = this.applyPropsAndContentToChildren(props);\n            }\n            const component = children[0];\n            return React.createElement(component.type, component.props);\n        }\n        return (\n            <span {...props}>{this.mungeString(content)}</span>\n        );\n    }\n}\n\nTranslatable.propTypes = {\n    attributes: PropTypes.object,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    content: PropTypes.shape({\n        transKey: PropTypes.string.isRequired,\n        count: PropTypes.number,\n        replacements: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    }),\n    handleError: PropTypes.func,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    lang: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nexport default Translatable;\n","\nimport Translatable from './Translatable';\n\nexport default Translatable;\n\n// export { default as withRedux } from './withRedux';\n"],"names":["define","this","TranslationHelper","options","messages","key","segments","split","source","replace","slice","Lang","Translatable","props","langHelper","lang","applyPropsAndContentToChildren","bind","handleAttributes","handleNestedAttributes","mungeString","removeUnwantedProps","content","React","Children","map","children","propsToApply","child","Object","nestedAttributes","prop","updatedChild","cloneElement","newProps","attributes","attribute","transString","nestedAttribute","k","transKey","count","replacements","choice","handleError","Error","get","store","storeSubscription","dispatch","className","translatedString","component","createElement","type","Component"],"mappings":"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"}